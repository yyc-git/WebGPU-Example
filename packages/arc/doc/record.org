* DONE draw one ring

use ray-tracing: screen ?

AccelerationStructure:
c, w, r
(purpose: local = world)


# first judge(fast)
first judge(fast): 2d aabb
second judge(precise)




get first one(add z?)


screen coordinate?


cpu:

scene buffer:
# transform: pos(c), scale
# 	use 2(position) + 2(scale) instead of 16(world matrix)!
transform: pos(c)
	use 2(position) instead of 16(world matrix)!
geometry: w, r
material: color

render ArrayBuffer:  map to gpu


1b * n byte = n GB


* DONE draw 2 ring

one geometry, one material, two transforms

* DONE object move

# perf: 2d matrix operate!

transform: pos(c)
	use 2(position) instead of 16(world matrix)!

* TODO draw 1b ring

perf hots:

arrayLength

_intersectScene

_isIntersectWithAABB2D



solution:
use fixed accelerationStructures count;
use bvh;
optimize _isIntersectWithAABB2D;


should at least draw 10m ring at 60fps!


** TODO perf: workgroup_size?

** TODO perf: compute! in _intersectScene


** TODO perf: use 2d bvh



* TODO perf: remove pad?

* TODO camera scale, move




* TODO draw arc




* TODO commit to user






* TODO perf: optimize memory


compress?

...





* TODO object rotate, move

perf: 2d matrix operate!


* TODO select object







